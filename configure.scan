dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/feature.h)
AC_CONFIG_HEADER(config.h)

dnl# Check for host system type
AC_CANONICAL_HOST

if test "x$CC" = "xNONE"; then
  dnl# Check for Pentium compilers
  AC_CHECK_PROG(EGCS, egcs, egcs)
  AC_CHECK_PROG(PGCC, pgcc, pgcc)

  if test ! -z "$EGCS"; then
    CC=$EGCS
  elif test ! -z "$PGCC"; then
    CC=$PGCC
  else
    unset CC
  fi
fi


dnl Checks for programs.
AC_PROG_CC
dnl#--- These must be run after AC_PROG_CC but before any other macros that use
dnl#--- the C compiler
AC_AIX
AC_ISC_POSIX
AC_MINIX

AC_PROG_CPP
dnl#----- Where are we?
AC_MSG_CHECKING(for distribution root)
DIST_ROOT=`pwd`
AC_SUBST(DIST_ROOT)
AC_MSG_RESULT($DIST_ROOT)


AC_GCC_TRADITIONAL
dnl#---- If using gcc, use -O2.  If -g works with it, use that too
if test "${CFLAGS_GIVEN}" -ne 1; then
    if test "$GCC" = "yes"; then
	if test "$ac_cv_prog_cc_g" = "yes"; then
	    CCOPTS='-g -O2'
	else
	    CCOPTS='-O2'
	fi
	CFLAGS="$CCOPTS"
    fi
fi

dnl#------
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_LN_S

dnl#----- Look for needed programs
AC_CHECK_PROG(SED, sed, sed, false)
AC_CHECK_PROG(RM, rm, rm, true)
AC_CHECK_PROG(CP, cp, cp, false)
AC_CHECK_PROG(CHMOD, chmod, chmod, true)
AC_CHECK_PROG(TAR, tar, tar, tar)
AC_CHECK_PROG(MKDIR, mkdir, mkdir, false)
AC_CHECK_PROG(CTAGS, ctags, ctags, true)
AC_CHECK_PROG(AR, ar, ar, false)
AC_CHECK_PROG(MV, mv, mv, true)

dnl#---- sanity check
AM_SANITY_CHECK

AC_C_INLINE

dnl#---- Checks for header files.
dnl  AC_HEADER_STDC

AC_PATH_X
AC_PATH_XTRA
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sgtty.h strings.h sys/ioctl.h sys/time.h \
                 string.h termios.h sys/select.h stdarg.h strings.h )

dnl#------ Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_MODE_T
AC_TYPE_SIGNAL

dnl#------ Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_FNMATCH
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_SETPGRP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd gethostname gettimeofday select strtol)

dnl#------ Checks for X
AC_CHECK_LIB(X11, XOpenDisplay, X_LIBS="$X_LIBS -lX11", [
echo "ERROR:  Couldn't find libX11. If your X libraries are located in an unsual";
echo "        place, use the --x-libraries parameter to configure.";
     AC_MSG_ERROR([Fatal:  libX11 not found.])], $X_LIBS $SUBLIBS)

AC_CHECK_LIB(Xext, XextAddDisplay, X_LIBS="-lXext $X_LIBS", [
echo "ERROR:  Couldn't find libXext. If your X libraries are located in an unsual";
echo "        place, use the --x-libraries parameter to configure.";
      AC_MSG_ERROR([Fatal:  libXext not found.])], $X_LIBS $SUBLIBS)

AC_CHECK_LIB(Xext, XShapeQueryExtension, AC_DEFINE(HAVE_X_SHAPE_EXT), , $X_LIBS $SUBLIBS)
AC_CHECK_LIB(Xext, XShmQueryExtension, AC_DEFINE(HAVE_XSHM), , $X_LIBS $SUBLIBS)

GX_LIBS="$X_PRE_LIBS $X_LIBS -lXext -lX11 -lm"

dnl#
dnl#------ Checks for image libs
SUPPORT_LIBS=""
dnl#
dnl#-------Test for libjpeg
AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
  jpeg_ok=yes,
  jpeg_ok=no
  AC_MSG_WARN(*** JPEG support removed (JPEG library not found)
 ***), $GX_LIBS)
if test "$jpeg_ok" = yes; then
  AC_MSG_CHECKING([for jpeglib.h])
  AC_TRY_CPP(
[#include <stdio.h>
#undef PACKAGE
#undef VERSION
#include <jpeglib.h>],
    jpeg_ok=yes,
    jpeg_ok=no)
  AC_MSG_RESULT($jpeg_ok)
  if test "$jpeg_ok" = yes; then
    SUPPORT_LIBS="$SUPPORT_LIBS -ljpeg"; AC_DEFINE(HAVE_LIBJPEG)
  else
    AC_MSG_WARN(*** JPEG support removed (JPEG header file not 
found) ***)
  fi
fi

dnl Test for libtiff
AC_CHECK_LIB(tiff, TIFFReadScanline,
  AC_CHECK_HEADER(tiffio.h,
    SUPPORT_LIBS="$SUPPORT_LIBS -ltiff"; AC_DEFINE(HAVE_LIBTIFF),
    AC_MSG_WARN(*** TIFF support removed (TIFF header files not found) ***)),
  AC_CHECK_LIB(tiff, TIFFWriteScanline,
    AC_CHECK_HEADER(tiffio.h,
      SUPPORT_LIBS="$SUPPORT_LIBS -ltiff -ljpeg -lz"; AC_DEFINE(HAVE_LIBTIFF),
      AC_MSG_WARN(*** TIFF support removed (TIFF header files not found) ***)),
    AC_CHECK_LIB(tiff34, TIFFFlushData,
      AC_CHECK_HEADER(tiffio.h,
        SUPPORT_LIBS="$SUPPORT_LIBS -ltiff34 -ljpeg -lz"; AC_DEFINE(HAVE_LIBTIFF),
        AC_MSG_WARN(*** TIFF support removed (TIFF header files not found) ***)),
    AC_MSG_WARN(*** TIFF support removed (TIFF library not found) ***), -ljpeg -lz $GX_LIBS), -ljpeg -lz $GX_LIBS), $GX_LIBS)


dnl Test for libpng
AC_CHECK_LIB(png, png_read_info,
  AC_CHECK_HEADER(png.h,
    png_ok=yes,
    png_ok=no),
  AC_MSG_WARN(***  PNG support removed (PNG library not found) ***), -lz -lm $GX_LIBS)
if test "$png_ok" = yes; then
  AC_MSG_CHECKING([for png_structp in png.h])
  AC_TRY_COMPILE([#include <png.h>],
    [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct
; png_set_IHDR;],
    png_ok=yes,
    png_ok=no)
  AC_MSG_RESULT($png_ok)
  if test "$png_ok" = yes; then
    SUPPORT_LIBS="$SUPPORT_LIBS -lpng -lz"; AC_DEFINE(HAVE_LIBPNG)
  else
    AC_MSG_WARN(*** PNG support removed (PNG library is too old) ***)
  fi
else
  AC_MSG_WARN(*** PNG support removed (PNG header file not found) ***)
fi

LIBS="$SUPPORT_LIBS $LIBS -lm"

dnl AC_OUTPUT(include/Makefile jpeg/Makefile lib/Makefile demos/Makefile demos/GL/Makefile demos/Message/Makefile demos/DnD/Makefile examples/Makefile demos/Glass/Makefile Makefile)

dnl AC_OUTPUT(Makefile)

echo "
Configuration:

  Source code location:       ${srcdir}
  Compiler:	              ${CC} ${CFLAGS}
  Host System Type:           ${host}
  Graphics libraries:         ${GRLIBS}
  X Windows libs/paths:       ${X_LIBS}
  Install path:		      ${prefix}

  See src/feature.h for further configuration information."
echo

